# -*- coding: utf-8 -*-
"""Copia de Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LFYOLeZbEXPOlEDDN95tgMpbKShRPxt4

**Task 07: Querying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2023-2024/master/Assignment4/course_materials"

"""First let's read the RDF file"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "LivingThing" with RDFLib and SPARQL**"""

# TO DO
# Visualize the results

#for r in g.query(q1):
#  print(r)

from rdflib.plugins.sparql import prepareQuery

ns = Namespace("http://somewhere#")
class_of_interest=ns.LivingThing

q1 = prepareQuery('''
  SELECT ?subclass WHERE {
    ?subclass rdfs:subClassOf+ ?class_of_interest.
  }
  ''',
  initNs = { "class_of_interest": class_of_interest}
)

for r in g.query(q1):
  print(r.subclass)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
# Visualize the results

"""**TASK 7.3: List all individuals of "Person" or "Animal" and all their properties including their class with RDFLib and SPARQL. You do not need to list the individuals of the subclasses of person**

"""

# TO DO
# Visualize the results

"""**TASK 7.4:  List the name of the persons who know Rocky**"""

from rdflib import FOAF


q4 = prepareQuery('''
  SELECT  ?Subject  WHERE {
    ?Subject foaf:knows ?Rocky.
  }
  ''',
  initNs = { "foaf": FOAF}
)

for r in g.query(q4):
  print(r.Subject)

"""**Task 7.5: List the entities who know at least two other entities in the graph**"""

# TO DO
# Visualize the results